{"ast":null,"code":"var _jsxFileName = \"D:\\\\c project\\\\kalakriti2.0\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  async function signup(email, password, name, photo = null, category = 'Visual Arts') {\n    try {\n      console.log('AuthContext: Starting signup process...');\n      console.log('AuthContext: Email:', email);\n      console.log('AuthContext: Name:', name);\n      console.log('AuthContext: Category:', category);\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      console.log('AuthContext: User created successfully:', user.uid);\n\n      // Update profile with display name\n      await updateProfile(user, {\n        displayName: name,\n        photoURL: photo\n      });\n      console.log('AuthContext: Profile updated successfully');\n\n      // Create user document in Firestore\n      const userData = {\n        name,\n        email,\n        photo: photo || null,\n        primaryCategory: category,\n        talents: [],\n        joinDate: new Date().toISOString(),\n        isOnline: true\n      };\n      console.log('AuthContext: Creating user document in Firestore...');\n      console.log('AuthContext: User data:', userData);\n      await setDoc(doc(db, 'users', user.uid), userData);\n      console.log('AuthContext: User document created successfully');\n      return user;\n    } catch (error) {\n      console.error('AuthContext: Signup error:', error);\n      console.error('AuthContext: Error code:', error.code);\n      console.error('AuthContext: Error message:', error.message);\n      throw error;\n    }\n  }\n  async function login(email, password) {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return userCredential.user;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async function logout() {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      throw error;\n    }\n  }\n  async function getUserData(uid) {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', uid));\n      if (userDoc.exists()) {\n        return {\n          id: uid,\n          ...userDoc.data()\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        const userData = await getUserData(user.uid);\n        setCurrentUser(userData);\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    getUserData,\n    refreshUserData: async () => {\n      if (auth.currentUser) {\n        const userData = await getUserData(auth.currentUser.uid);\n        setCurrentUser(userData);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","doc","setDoc","getDoc","auth","db","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signup","email","password","name","photo","category","console","log","userCredential","user","uid","displayName","photoURL","userData","primaryCategory","talents","joinDate","Date","toISOString","isOnline","error","code","message","login","logout","getUserData","userDoc","exists","id","data","unsubscribe","value","refreshUserData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/c project/kalakriti2.0/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  updateProfile\n} from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { auth, db } from '../firebase/config';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  async function signup(email, password, name, photo = null, category = 'Visual Arts') {\n    try {\n      console.log('AuthContext: Starting signup process...');\n      console.log('AuthContext: Email:', email);\n      console.log('AuthContext: Name:', name);\n      console.log('AuthContext: Category:', category);\n      \n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      \n      console.log('AuthContext: User created successfully:', user.uid);\n      \n      // Update profile with display name\n      await updateProfile(user, {\n        displayName: name,\n        photoURL: photo\n      });\n      \n      console.log('AuthContext: Profile updated successfully');\n\n      // Create user document in Firestore\n      const userData = {\n        name,\n        email,\n        photo: photo || null,\n        primaryCategory: category,\n        talents: [],\n        joinDate: new Date().toISOString(),\n        isOnline: true\n      };\n      \n      console.log('AuthContext: Creating user document in Firestore...');\n      console.log('AuthContext: User data:', userData);\n      \n      await setDoc(doc(db, 'users', user.uid), userData);\n      \n      console.log('AuthContext: User document created successfully');\n\n      return user;\n    } catch (error) {\n      console.error('AuthContext: Signup error:', error);\n      console.error('AuthContext: Error code:', error.code);\n      console.error('AuthContext: Error message:', error.message);\n      throw error;\n    }\n  }\n\n  async function login(email, password) {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      return userCredential.user;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async function logout() {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async function getUserData(uid) {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', uid));\n      if (userDoc.exists()) {\n        return { id: uid, ...userDoc.data() };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        const userData = await getUserData(user.uid);\n        setCurrentUser(userData);\n      } else {\n        setCurrentUser(null);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    getUserData,\n    refreshUserData: async () => {\n      if (auth.currentUser) {\n        const userData = await getUserData(auth.currentUser.uid);\n        setCurrentUser(userData);\n      }\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}