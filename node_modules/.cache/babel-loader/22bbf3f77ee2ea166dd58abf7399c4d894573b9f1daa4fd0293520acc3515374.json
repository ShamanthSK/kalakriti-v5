{"ast":null,"code":"var _jsxFileName = \"D:\\\\c project\\\\kalakriti2.0\\\\src\\\\components\\\\FirebaseTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { auth, db } from '../firebase/config';\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirebaseTest = () => {\n  _s();\n  const [testResult, setTestResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const testFirebaseConnection = async () => {\n    setIsLoading(true);\n    setTestResult('Testing Firebase connection...');\n    try {\n      // Test Firestore connection\n      const usersRef = collection(db, 'users');\n      const snapshot = await getDocs(usersRef);\n      console.log('Firestore test successful. Users count:', snapshot.size);\n\n      // Test Auth connection\n      console.log('Auth object:', auth);\n      console.log('Auth app:', auth.app);\n      console.log('Project ID:', auth.app.options.projectId);\n\n      // Test if we can write to Firestore (this will help identify permission issues)\n      try {\n        const testRef = collection(db, 'test');\n        await addDoc(testRef, {\n          test: true,\n          timestamp: new Date().toISOString()\n        });\n        console.log('Firestore write test successful');\n        setTestResult(`✅ Firebase connection successful! \n          - Firestore: Connected (${snapshot.size} users found)\n          - Auth: Connected\n          - Project ID: ${auth.app.options.projectId}\n          - Write permissions: ✅ Working`);\n      } catch (writeError) {\n        console.error('Firestore write test failed:', writeError);\n        setTestResult(`⚠️ Firebase partially connected! \n          - Firestore: Connected (${snapshot.size} users found)\n          - Auth: Connected\n          - Project ID: ${auth.app.options.projectId}\n          - Write permissions: ❌ ${writeError.message}`);\n      }\n    } catch (error) {\n      console.error('Firebase test error:', error);\n      setTestResult(`❌ Firebase connection failed: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 bg-white p-4 rounded-lg shadow-lg border z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold mb-2\",\n      children: \"Firebase Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testFirebaseConnection,\n      disabled: isLoading,\n      className: \"bg-blue-500 text-white px-3 py-1 rounded text-sm mb-2\",\n      children: isLoading ? 'Testing...' : 'Test Connection'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-600 max-w-xs\",\n      children: testResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(FirebaseTest, \"EJxykypdZ2vNO/+7eQKidsQN59o=\");\n_c = FirebaseTest;\nexport default FirebaseTest;\nvar _c;\n$RefreshReg$(_c, \"FirebaseTest\");","map":{"version":3,"names":["React","useState","auth","db","collection","getDocs","addDoc","jsxDEV","_jsxDEV","FirebaseTest","_s","testResult","setTestResult","isLoading","setIsLoading","testFirebaseConnection","usersRef","snapshot","console","log","size","app","options","projectId","testRef","test","timestamp","Date","toISOString","writeError","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/c project/kalakriti2.0/src/components/FirebaseTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth, db } from '../firebase/config';\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore';\r\n\r\nconst FirebaseTest = () => {\r\n  const [testResult, setTestResult] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const testFirebaseConnection = async () => {\r\n    setIsLoading(true);\r\n    setTestResult('Testing Firebase connection...');\r\n    \r\n    try {\r\n      // Test Firestore connection\r\n      const usersRef = collection(db, 'users');\r\n      const snapshot = await getDocs(usersRef);\r\n      console.log('Firestore test successful. Users count:', snapshot.size);\r\n      \r\n      // Test Auth connection\r\n      console.log('Auth object:', auth);\r\n      console.log('Auth app:', auth.app);\r\n      console.log('Project ID:', auth.app.options.projectId);\r\n      \r\n      // Test if we can write to Firestore (this will help identify permission issues)\r\n      try {\r\n        const testRef = collection(db, 'test');\r\n        await addDoc(testRef, {\r\n          test: true,\r\n          timestamp: new Date().toISOString()\r\n        });\r\n        console.log('Firestore write test successful');\r\n        \r\n        setTestResult(`✅ Firebase connection successful! \r\n          - Firestore: Connected (${snapshot.size} users found)\r\n          - Auth: Connected\r\n          - Project ID: ${auth.app.options.projectId}\r\n          - Write permissions: ✅ Working`);\r\n          \r\n      } catch (writeError) {\r\n        console.error('Firestore write test failed:', writeError);\r\n        setTestResult(`⚠️ Firebase partially connected! \r\n          - Firestore: Connected (${snapshot.size} users found)\r\n          - Auth: Connected\r\n          - Project ID: ${auth.app.options.projectId}\r\n          - Write permissions: ❌ ${writeError.message}`);\r\n      }\r\n        \r\n    } catch (error) {\r\n      console.error('Firebase test error:', error);\r\n      setTestResult(`❌ Firebase connection failed: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 bg-white p-4 rounded-lg shadow-lg border z-50\">\r\n      <h3 className=\"font-bold mb-2\">Firebase Test</h3>\r\n      <button \r\n        onClick={testFirebaseConnection}\r\n        disabled={isLoading}\r\n        className=\"bg-blue-500 text-white px-3 py-1 rounded text-sm mb-2\"\r\n      >\r\n        {isLoading ? 'Testing...' : 'Test Connection'}\r\n      </button>\r\n      <div className=\"text-xs text-gray-600 max-w-xs\">\r\n        {testResult}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirebaseTest; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,EAAE,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzCD,YAAY,CAAC,IAAI,CAAC;IAClBF,aAAa,CAAC,gCAAgC,CAAC;IAE/C,IAAI;MACF;MACA,MAAMI,QAAQ,GAAGZ,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;MACxC,MAAMc,QAAQ,GAAG,MAAMZ,OAAO,CAACW,QAAQ,CAAC;MACxCE,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,QAAQ,CAACG,IAAI,CAAC;;MAErE;MACAF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEjB,IAAI,CAAC;MACjCgB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEjB,IAAI,CAACmB,GAAG,CAAC;MAClCH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjB,IAAI,CAACmB,GAAG,CAACC,OAAO,CAACC,SAAS,CAAC;;MAEtD;MACA,IAAI;QACF,MAAMC,OAAO,GAAGpB,UAAU,CAACD,EAAE,EAAE,MAAM,CAAC;QACtC,MAAMG,MAAM,CAACkB,OAAO,EAAE;UACpBC,IAAI,EAAE,IAAI;UACVC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;QACFV,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAE9CP,aAAa,CAAC;AACtB,oCAAoCK,QAAQ,CAACG,IAAI;AACjD;AACA,0BAA0BlB,IAAI,CAACmB,GAAG,CAACC,OAAO,CAACC,SAAS;AACpD,yCAAyC,CAAC;MAEpC,CAAC,CAAC,OAAOM,UAAU,EAAE;QACnBX,OAAO,CAACY,KAAK,CAAC,8BAA8B,EAAED,UAAU,CAAC;QACzDjB,aAAa,CAAC;AACtB,oCAAoCK,QAAQ,CAACG,IAAI;AACjD;AACA,0BAA0BlB,IAAI,CAACmB,GAAG,CAACC,OAAO,CAACC,SAAS;AACpD,mCAAmCM,UAAU,CAACE,OAAO,EAAE,CAAC;MAClD;IAEF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ClB,aAAa,CAAC,iCAAiCkB,KAAK,CAACC,OAAO,EAAE,CAAC;IACjE,CAAC,SAAS;MACRjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKwB,SAAS,EAAC,mEAAmE;IAAAC,QAAA,gBAChFzB,OAAA;MAAIwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD7B,OAAA;MACE8B,OAAO,EAAEvB,sBAAuB;MAChCwB,QAAQ,EAAE1B,SAAU;MACpBmB,SAAS,EAAC,uDAAuD;MAAAC,QAAA,EAEhEpB,SAAS,GAAG,YAAY,GAAG;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACT7B,OAAA;MAAKwB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAC5CtB;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlEID,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAoElB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}