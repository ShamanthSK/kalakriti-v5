{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{Send,Search,User,MoreVertical}from'lucide-react';import{collection,getDocs,query,where,orderBy,addDoc,onSnapshot,updateDoc,doc}from'firebase/firestore';import{db}from'../firebase/config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MessagesPage=_ref=>{let{onNavigate}=_ref;const{currentUser}=useAuth();const[conversations,setConversations]=useState([]);const[selectedConversation,setSelectedConversation]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[isLoading,setIsLoading]=useState(true);const[unreadCounts,setUnreadCounts]=useState({});useEffect(()=>{const fetchConversations=async()=>{if(!currentUser){setIsLoading(false);return;}try{// Fetch all users for conversations in a single query\nconst usersRef=collection(db,'users');const usersSnapshot=await getDocs(usersRef);const users=usersSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Filter out current user and create conversation list\nconst otherUsers=users.filter(user=>user.id!==currentUser.id);// Create conversation list with default values\nconst conversationList=otherUsers.map(user=>({id:user.id,name:user.name,photo:user.photo,primaryCategory:user.primaryCategory,isOnline:user.isOnline||false,lastMessage:\"Start a conversation!\",lastMessageTime:new Date().toISOString(),unreadCount:0}));setConversations(conversationList);// If there are conversations, select the first one\nif(conversationList.length>0){setSelectedConversation(conversationList[0]);}}catch(error){console.error('Error fetching conversations:',error);setConversations([]);}finally{setIsLoading(false);}};fetchConversations();},[currentUser]);// Listen for all messages to update unread counts\nuseEffect(()=>{if(!currentUser)return;const messagesRef=collection(db,'messages');const messagesQuery=query(messagesRef,where('participants','array-contains',currentUser.id),orderBy('timestamp','desc'));const unsubscribe=onSnapshot(messagesQuery,snapshot=>{const allMessages=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Calculate unread counts for each conversation\nconst newUnreadCounts={};conversations.forEach(conv=>{const conversationMessages=allMessages.filter(msg=>{var _msg$readBy;return msg.participants.includes(conv.id)&&msg.participants.includes(currentUser.id)&&msg.senderId!==currentUser.id&&// Only count messages from others\n!((_msg$readBy=msg.readBy)!==null&&_msg$readBy!==void 0&&_msg$readBy.includes(currentUser.id));}// Only count unread messages\n);newUnreadCounts[conv.id]=conversationMessages.length;});setUnreadCounts(newUnreadCounts);// Update conversation list with unread counts\nsetConversations(prev=>prev.map(conv=>({...conv,unreadCount:newUnreadCounts[conv.id]||0})));},error=>{console.error('Error listening to messages for unread counts:',error);});return()=>unsubscribe();},[currentUser,conversations]);useEffect(()=>{if(!selectedConversation||!currentUser)return;console.log('Setting up message listener for:',{currentUser:currentUser.id,selectedConversation:selectedConversation.id});// Set up real-time listener for messages between these two users\nconst messagesRef=collection(db,'messages');try{const messagesQuery=query(messagesRef,where('participants','array-contains',currentUser.id),orderBy('timestamp','asc'));const unsubscribe=onSnapshot(messagesQuery,snapshot=>{console.log('Snapshot received with',snapshot.docs.length,'messages');const allMessages=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));console.log('All messages:',allMessages);// Filter messages for this specific conversation\nconst conversationMessages=allMessages.filter(msg=>msg.participants.includes(selectedConversation.id)&&msg.participants.includes(currentUser.id));console.log('Filtered messages for conversation:',conversationMessages);setMessages(conversationMessages);},error=>{console.error('Error listening to messages:',error);// Don't show alert, just log the error\nconsole.log('Message listener error details:',error);});return()=>{console.log('Cleaning up message listener');unsubscribe();};}catch(error){console.error('Error setting up message listener:',error);// Don't show alert, just log the error\n}},[selectedConversation,currentUser]);const handleTestMessage=async()=>{if(!selectedConversation||!currentUser)return;try{const testMessage={senderId:currentUser.id,receiverId:selectedConversation.id,participants:[currentUser.id,selectedConversation.id].sort(),content:`Test message from ${currentUser.name} at ${new Date().toLocaleTimeString()}`,timestamp:new Date().toISOString(),type:'text',senderName:currentUser.name,readBy:[currentUser.id]// Sender has already read their own message\n};console.log('Sending test message:',testMessage);const docRef=await addDoc(collection(db,'messages'),testMessage);console.log('Test message sent with ID:',docRef.id);alert('Test message sent! Check console for details.');}catch(error){console.error('Error sending test message:',error);alert('Error sending test message: '+error.message);}};const handleConversationSelect=async conversation=>{setSelectedConversation(conversation);// Mark all messages in this conversation as read\nif(conversation.unreadCount>0){try{// Get all unread messages for this conversation\nconst messagesRef=collection(db,'messages');const messagesQuery=query(messagesRef,where('participants','array-contains',currentUser.id));const snapshot=await getDocs(messagesQuery);const allMessages=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));// Filter messages for this conversation that are unread\nconst unreadMessages=allMessages.filter(msg=>{var _msg$readBy2;return msg.participants.includes(conversation.id)&&msg.participants.includes(currentUser.id)&&msg.senderId!==currentUser.id&&!((_msg$readBy2=msg.readBy)!==null&&_msg$readBy2!==void 0&&_msg$readBy2.includes(currentUser.id));});// Mark each unread message as read\nconst updatePromises=unreadMessages.map(async msg=>{const messageRef=doc(db,'messages',msg.id);const readBy=msg.readBy||[];if(!readBy.includes(currentUser.id)){await updateDoc(messageRef,{readBy:[...readBy,currentUser.id]});}});await Promise.all(updatePromises);// Update local state immediately for better UX\nsetConversations(prev=>prev.map(conv=>conv.id===conversation.id?{...conv,unreadCount:0}:conv));}catch(error){console.error('Error marking messages as read:',error);}}};const handleSendMessage=async()=>{if(!newMessage.trim()||!selectedConversation||!currentUser)return;const messageContent=newMessage.trim();setNewMessage('');// Clear input immediately for better UX\ntry{const messageData={senderId:currentUser.id,receiverId:selectedConversation.id,participants:[currentUser.id,selectedConversation.id].sort(),// Sort for consistency\ncontent:messageContent,timestamp:new Date().toISOString(),type:'text',senderName:currentUser.name,readBy:[currentUser.id]// Sender has already read their own message\n};console.log('Sending message:',messageData);// Debug log\n// Add message to Firestore\nconst docRef=await addDoc(collection(db,'messages'),messageData);console.log('Message sent successfully with ID:',docRef.id);// Update conversation's last message\nsetConversations(prev=>prev.map(conv=>conv.id===selectedConversation.id?{...conv,lastMessage:messageContent,lastMessageTime:new Date().toISOString()}:conv));}catch(error){console.error('Error sending message:',error);alert('Error sending message. Please try again.');setNewMessage(messageContent);// Restore message if failed\n}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSendMessage();}};if(!currentUser){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-4\",children:\"Please log in to view messages\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('login'),className:\"bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg transition-colors\",children:\"Login\"})]});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-600\",children:\"Loading messages...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-lg h-[600px] flex fade-in\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 border-r border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-gray-200\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-gray-800 mb-4\",children:\"\\uD83D\\uDCAC Messages\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search conversations...\",className:\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto h-[calc(600px-80px)]\",children:conversations.length>0?conversations.map(conversation=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>handleConversationSelect(conversation),className:`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors ${(selectedConversation===null||selectedConversation===void 0?void 0:selectedConversation.id)===conversation.id?'bg-purple-50 border-l-4 border-l-purple-500':''}`,children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[conversation.photo?/*#__PURE__*/_jsx(\"img\",{src:conversation.photo,alt:conversation.name,className:\"profile-photo\",onError:e=>{e.target.style.display='none';e.target.nextSibling.style.display='flex';}}):/*#__PURE__*/_jsx(\"div\",{className:\"profile-photo bg-purple-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(User,{className:\"text-purple-600\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-photo bg-purple-100 flex items-center justify-center\",style:{display:'none'},children:/*#__PURE__*/_jsx(User,{className:\"text-purple-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 min-w-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-800 truncate\",children:conversation.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[conversation.isOnline&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-green-500 rounded-full\"}),/*#__PURE__*/_jsx(MoreVertical,{className:\"w-4 h-4 text-gray-400\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 truncate\",children:conversation.primaryCategory}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 truncate\",children:conversation.lastMessage}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-400\",children:new Date(conversation.lastMessageTime).toLocaleTimeString()})]}),conversation.unreadCount>0&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\",children:conversation.unreadCount})]})},conversation.id)):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-3\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-2\",children:\"No conversations yet!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm\",children:\"Start chatting with other artists.\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col\",children:selectedConversation?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-200 bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[selectedConversation.photo?/*#__PURE__*/_jsx(\"img\",{src:selectedConversation.photo,alt:selectedConversation.name,className:\"profile-photo\",onError:e=>{e.target.style.display='none';e.target.nextSibling.style.display='flex';}}):/*#__PURE__*/_jsx(\"div\",{className:\"profile-photo bg-purple-100 flex items-center justify-center\",children:/*#__PURE__*/_jsx(User,{className:\"text-purple-600\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-photo bg-purple-100 flex items-center justify-center\",style:{display:'none'},children:/*#__PURE__*/_jsx(User,{className:\"text-purple-600\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-800\",children:selectedConversation.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[selectedConversation.primaryCategory,\" Artist\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[selectedConversation.isOnline&&/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-green-500 rounded-full\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500\",children:selectedConversation.isOnline?'Online':'Offline'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onNavigate('artist-profile',selectedConversation.id),className:\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors\",children:\"View Profile\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4 space-y-4\",children:messages.length>0?messages.map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.senderId===currentUser.id?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.senderId===currentUser.id?'bg-purple-600 text-white':'bg-gray-200 text-gray-800'}`,children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:message.content}),/*#__PURE__*/_jsx(\"p\",{className:`text-xs mt-1 ${message.senderId===currentUser.id?'text-purple-200':'text-gray-500'}`,children:new Date(message.timestamp).toLocaleTimeString()})]})},message.id)):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-3\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-2\",children:\"No messages yet!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-400 text-sm\",children:[\"Start the conversation with \",selectedConversation.name,\".\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-3 mb-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleTestMessage,className:\"bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded-lg text-sm transition-colors\",children:\"\\uD83E\\uDDEA Test Message\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Type your message...\",className:\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:!newMessage.trim(),className:\"bg-purple-600 hover:bg-purple-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg transition-colors flex items-center\",children:/*#__PURE__*/_jsx(Send,{className:\"w-4 h-4\"})})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 mb-2\",children:\"Select a conversation to start chatting\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm\",children:\"Choose from the list on the left\"})]})})})]});};export default MessagesPage;","map":{"version":3,"names":["React","useState","useEffect","useAuth","Send","Search","User","MoreVertical","collection","getDocs","query","where","orderBy","addDoc","onSnapshot","updateDoc","doc","db","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MessagesPage","_ref","onNavigate","currentUser","conversations","setConversations","selectedConversation","setSelectedConversation","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","unreadCounts","setUnreadCounts","fetchConversations","usersRef","usersSnapshot","users","docs","map","id","data","otherUsers","filter","user","conversationList","name","photo","primaryCategory","isOnline","lastMessage","lastMessageTime","Date","toISOString","unreadCount","length","error","console","messagesRef","messagesQuery","unsubscribe","snapshot","allMessages","newUnreadCounts","forEach","conv","conversationMessages","msg","_msg$readBy","participants","includes","senderId","readBy","prev","log","handleTestMessage","testMessage","receiverId","sort","content","toLocaleTimeString","timestamp","type","senderName","docRef","alert","message","handleConversationSelect","conversation","unreadMessages","_msg$readBy2","updatePromises","messageRef","Promise","all","handleSendMessage","trim","messageContent","messageData","handleKeyPress","e","key","shiftKey","preventDefault","className","children","onClick","placeholder","src","alt","onError","target","style","display","nextSibling","value","onChange","onKeyPress","disabled"],"sources":["D:/c project/kalakriti2.0/src/components/MessagesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Send, Search, User, MoreVertical } from 'lucide-react';\r\nimport { collection, getDocs, query, where, orderBy, addDoc, onSnapshot, updateDoc, doc } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\n\r\nconst MessagesPage = ({ onNavigate }) => {\r\n  const { currentUser } = useAuth();\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [unreadCounts, setUnreadCounts] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      if (!currentUser) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Fetch all users for conversations in a single query\r\n        const usersRef = collection(db, 'users');\r\n        const usersSnapshot = await getDocs(usersRef);\r\n        const users = usersSnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n\r\n        // Filter out current user and create conversation list\r\n        const otherUsers = users.filter(user => user.id !== currentUser.id);\r\n        \r\n        // Create conversation list with default values\r\n        const conversationList = otherUsers.map(user => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          photo: user.photo,\r\n          primaryCategory: user.primaryCategory,\r\n          isOnline: user.isOnline || false,\r\n          lastMessage: \"Start a conversation!\",\r\n          lastMessageTime: new Date().toISOString(),\r\n          unreadCount: 0\r\n        }));\r\n\r\n        setConversations(conversationList);\r\n\r\n        // If there are conversations, select the first one\r\n        if (conversationList.length > 0) {\r\n          setSelectedConversation(conversationList[0]);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching conversations:', error);\r\n        setConversations([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, [currentUser]);\r\n\r\n  // Listen for all messages to update unread counts\r\n  useEffect(() => {\r\n    if (!currentUser) return;\r\n\r\n    const messagesRef = collection(db, 'messages');\r\n    const messagesQuery = query(\r\n      messagesRef,\r\n      where('participants', 'array-contains', currentUser.id),\r\n      orderBy('timestamp', 'desc')\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\r\n      const allMessages = snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n\r\n      // Calculate unread counts for each conversation\r\n      const newUnreadCounts = {};\r\n      \r\n      conversations.forEach(conv => {\r\n        const conversationMessages = allMessages.filter(msg => \r\n          msg.participants.includes(conv.id) && \r\n          msg.participants.includes(currentUser.id) &&\r\n          msg.senderId !== currentUser.id && // Only count messages from others\r\n          !msg.readBy?.includes(currentUser.id) // Only count unread messages\r\n        );\r\n        \r\n        newUnreadCounts[conv.id] = conversationMessages.length;\r\n      });\r\n\r\n      setUnreadCounts(newUnreadCounts);\r\n\r\n      // Update conversation list with unread counts\r\n      setConversations(prev => prev.map(conv => ({\r\n        ...conv,\r\n        unreadCount: newUnreadCounts[conv.id] || 0\r\n      })));\r\n\r\n    }, (error) => {\r\n      console.error('Error listening to messages for unread counts:', error);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [currentUser, conversations]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedConversation || !currentUser) return;\r\n\r\n    console.log('Setting up message listener for:', {\r\n      currentUser: currentUser.id,\r\n      selectedConversation: selectedConversation.id\r\n    });\r\n\r\n    // Set up real-time listener for messages between these two users\r\n    const messagesRef = collection(db, 'messages');\r\n    \r\n    try {\r\n      const messagesQuery = query(\r\n        messagesRef,\r\n        where('participants', 'array-contains', currentUser.id),\r\n        orderBy('timestamp', 'asc')\r\n      );\r\n\r\n      const unsubscribe = onSnapshot(messagesQuery, (snapshot) => {\r\n        console.log('Snapshot received with', snapshot.docs.length, 'messages');\r\n        \r\n        const allMessages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n\r\n        console.log('All messages:', allMessages);\r\n\r\n        // Filter messages for this specific conversation\r\n        const conversationMessages = allMessages.filter(msg => \r\n          msg.participants.includes(selectedConversation.id) && \r\n          msg.participants.includes(currentUser.id)\r\n        );\r\n\r\n        console.log('Filtered messages for conversation:', conversationMessages);\r\n        setMessages(conversationMessages);\r\n      }, (error) => {\r\n        console.error('Error listening to messages:', error);\r\n        // Don't show alert, just log the error\r\n        console.log('Message listener error details:', error);\r\n      });\r\n\r\n      return () => {\r\n        console.log('Cleaning up message listener');\r\n        unsubscribe();\r\n      };\r\n    } catch (error) {\r\n      console.error('Error setting up message listener:', error);\r\n      // Don't show alert, just log the error\r\n    }\r\n  }, [selectedConversation, currentUser]);\r\n\r\n  const handleTestMessage = async () => {\r\n    if (!selectedConversation || !currentUser) return;\r\n\r\n    try {\r\n      const testMessage = {\r\n        senderId: currentUser.id,\r\n        receiverId: selectedConversation.id,\r\n        participants: [currentUser.id, selectedConversation.id].sort(),\r\n        content: `Test message from ${currentUser.name} at ${new Date().toLocaleTimeString()}`,\r\n        timestamp: new Date().toISOString(),\r\n        type: 'text',\r\n        senderName: currentUser.name,\r\n        readBy: [currentUser.id] // Sender has already read their own message\r\n      };\r\n\r\n      console.log('Sending test message:', testMessage);\r\n      const docRef = await addDoc(collection(db, 'messages'), testMessage);\r\n      console.log('Test message sent with ID:', docRef.id);\r\n      alert('Test message sent! Check console for details.');\r\n    } catch (error) {\r\n      console.error('Error sending test message:', error);\r\n      alert('Error sending test message: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleConversationSelect = async (conversation) => {\r\n    setSelectedConversation(conversation);\r\n    \r\n    // Mark all messages in this conversation as read\r\n    if (conversation.unreadCount > 0) {\r\n      try {\r\n        // Get all unread messages for this conversation\r\n        const messagesRef = collection(db, 'messages');\r\n        const messagesQuery = query(\r\n          messagesRef,\r\n          where('participants', 'array-contains', currentUser.id)\r\n        );\r\n        \r\n        const snapshot = await getDocs(messagesQuery);\r\n        const allMessages = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n\r\n        // Filter messages for this conversation that are unread\r\n        const unreadMessages = allMessages.filter(msg => \r\n          msg.participants.includes(conversation.id) && \r\n          msg.participants.includes(currentUser.id) &&\r\n          msg.senderId !== currentUser.id &&\r\n          !msg.readBy?.includes(currentUser.id)\r\n        );\r\n\r\n        // Mark each unread message as read\r\n        const updatePromises = unreadMessages.map(async (msg) => {\r\n          const messageRef = doc(db, 'messages', msg.id);\r\n          const readBy = msg.readBy || [];\r\n          if (!readBy.includes(currentUser.id)) {\r\n            await updateDoc(messageRef, {\r\n              readBy: [...readBy, currentUser.id]\r\n            });\r\n          }\r\n        });\r\n\r\n        await Promise.all(updatePromises);\r\n\r\n        // Update local state immediately for better UX\r\n        setConversations(prev => prev.map(conv => \r\n          conv.id === conversation.id \r\n            ? { ...conv, unreadCount: 0 }\r\n            : conv\r\n        ));\r\n\r\n      } catch (error) {\r\n        console.error('Error marking messages as read:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedConversation || !currentUser) return;\r\n\r\n    const messageContent = newMessage.trim();\r\n    setNewMessage(''); // Clear input immediately for better UX\r\n\r\n    try {\r\n      const messageData = {\r\n        senderId: currentUser.id,\r\n        receiverId: selectedConversation.id,\r\n        participants: [currentUser.id, selectedConversation.id].sort(), // Sort for consistency\r\n        content: messageContent,\r\n        timestamp: new Date().toISOString(),\r\n        type: 'text',\r\n        senderName: currentUser.name,\r\n        readBy: [currentUser.id] // Sender has already read their own message\r\n      };\r\n\r\n      console.log('Sending message:', messageData); // Debug log\r\n\r\n      // Add message to Firestore\r\n      const docRef = await addDoc(collection(db, 'messages'), messageData);\r\n      console.log('Message sent successfully with ID:', docRef.id);\r\n\r\n      // Update conversation's last message\r\n      setConversations(prev => prev.map(conv => \r\n        conv.id === selectedConversation.id \r\n          ? { ...conv, lastMessage: messageContent, lastMessageTime: new Date().toISOString() }\r\n          : conv\r\n      ));\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      alert('Error sending message. Please try again.');\r\n      setNewMessage(messageContent); // Restore message if failed\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"text-6xl mb-4\">🔒</div>\r\n        <p className=\"text-gray-500 mb-4\">Please log in to view messages</p>\r\n        <button \r\n          onClick={() => onNavigate('login')}\r\n          className=\"bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg transition-colors\"\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"spinner\"></div>\r\n        <span className=\"ml-3 text-gray-600\">Loading messages...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-lg h-[600px] flex fade-in\">\r\n      {/* Conversations List */}\r\n      <div className=\"w-1/3 border-r border-gray-200\">\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">💬 Messages</h2>\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Search conversations...\" \r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"overflow-y-auto h-[calc(600px-80px)]\">\r\n          {conversations.length > 0 ? (\r\n            conversations.map(conversation => (\r\n              <div \r\n                key={conversation.id}\r\n                onClick={() => handleConversationSelect(conversation)}\r\n                className={`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors ${\r\n                  selectedConversation?.id === conversation.id ? 'bg-purple-50 border-l-4 border-l-purple-500' : ''\r\n                }`}\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  {conversation.photo ? (\r\n                    <img \r\n                      src={conversation.photo} \r\n                      alt={conversation.name} \r\n                      className=\"profile-photo\"\r\n                      onError={(e) => {\r\n                        e.target.style.display = 'none';\r\n                        e.target.nextSibling.style.display = 'flex';\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"profile-photo bg-purple-100 flex items-center justify-center\">\r\n                      <User className=\"text-purple-600\" />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"profile-photo bg-purple-100 flex items-center justify-center\" style={{ display: 'none' }}>\r\n                    <User className=\"text-purple-600\" />\r\n                  </div>\r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h3 className=\"font-semibold text-gray-800 truncate\">{conversation.name}</h3>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {conversation.isOnline && <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>}\r\n                        <MoreVertical className=\"w-4 h-4 text-gray-400\" />\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 truncate\">{conversation.primaryCategory}</p>\r\n                    <p className=\"text-xs text-gray-500 truncate\">{conversation.lastMessage}</p>\r\n                    <p className=\"text-xs text-gray-400\">{new Date(conversation.lastMessageTime).toLocaleTimeString()}</p>\r\n                  </div>\r\n                  {conversation.unreadCount > 0 && (\r\n                    <div className=\"bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\r\n                      {conversation.unreadCount}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"text-4xl mb-3\">💬</div>\r\n              <p className=\"text-gray-500 mb-2\">No conversations yet!</p>\r\n              <p className=\"text-gray-400 text-sm\">Start chatting with other artists.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        {selectedConversation ? (\r\n          <>\r\n            {/* Chat Header */}\r\n            <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                {selectedConversation.photo ? (\r\n                  <img \r\n                    src={selectedConversation.photo} \r\n                    alt={selectedConversation.name} \r\n                    className=\"profile-photo\"\r\n                    onError={(e) => {\r\n                      e.target.style.display = 'none';\r\n                      e.target.nextSibling.style.display = 'flex';\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"profile-photo bg-purple-100 flex items-center justify-center\">\r\n                    <User className=\"text-purple-600\" />\r\n                  </div>\r\n                )}\r\n                <div className=\"profile-photo bg-purple-100 flex items-center justify-center\" style={{ display: 'none' }}>\r\n                  <User className=\"text-purple-600\" />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"font-semibold text-gray-800\">{selectedConversation.name}</h3>\r\n                  <p className=\"text-sm text-gray-600\">{selectedConversation.primaryCategory} Artist</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  {selectedConversation.isOnline && <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>}\r\n                  <span className=\"text-sm text-gray-500\">\r\n                    {selectedConversation.isOnline ? 'Online' : 'Offline'}\r\n                  </span>\r\n                  <button \r\n                    onClick={() => onNavigate('artist-profile', selectedConversation.id)}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors\"\r\n                  >\r\n                    View Profile\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Messages */}\r\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n              {messages.length > 0 ? (\r\n                messages.map(message => (\r\n                  <div \r\n                    key={message.id}\r\n                    className={`flex ${message.senderId === currentUser.id ? 'justify-end' : 'justify-start'}`}\r\n                  >\r\n                    <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\r\n                      message.senderId === currentUser.id \r\n                        ? 'bg-purple-600 text-white' \r\n                        : 'bg-gray-200 text-gray-800'\r\n                    }`}>\r\n                      <p className=\"text-sm\">{message.content}</p>\r\n                      <p className={`text-xs mt-1 ${\r\n                        message.senderId === currentUser.id ? 'text-purple-200' : 'text-gray-500'\r\n                      }`}>\r\n                        {new Date(message.timestamp).toLocaleTimeString()}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"text-4xl mb-3\">💬</div>\r\n                  <p className=\"text-gray-500 mb-2\">No messages yet!</p>\r\n                  <p className=\"text-gray-400 text-sm\">Start the conversation with {selectedConversation.name}.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Message Input */}\r\n            <div className=\"p-4 border-t border-gray-200\">\r\n              <div className=\"flex space-x-3 mb-2\">\r\n                <button \r\n                  onClick={handleTestMessage}\r\n                  className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-2 rounded-lg text-sm transition-colors\"\r\n                >\r\n                  🧪 Test Message\r\n                </button>\r\n              </div>\r\n              <div className=\"flex space-x-3\">\r\n                <input \r\n                  type=\"text\" \r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  onKeyPress={handleKeyPress}\r\n                  placeholder=\"Type your message...\" \r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\r\n                />\r\n                <button \r\n                  onClick={handleSendMessage}\r\n                  disabled={!newMessage.trim()}\r\n                  className=\"bg-purple-600 hover:bg-purple-700 disabled:bg-gray-400 text-white px-4 py-2 rounded-lg transition-colors flex items-center\"\r\n                >\r\n                  <Send className=\"w-4 h-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-6xl mb-4\">💬</div>\r\n              <p className=\"text-gray-500 mb-2\">Select a conversation to start chatting</p>\r\n              <p className=\"text-gray-400 text-sm\">Choose from the list on the left</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}